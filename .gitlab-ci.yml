image: docker:19.03.12

stages:
  - build
  - security_scan
  - generate_sbom
  - mark_as_immutable
  - sign_image
  - verify
  - promote_to_immutable_repo

variables:
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: ""
  CI_REGISTRY_IMAGE: $CI_REGISTRY/$CI_PROJECT_PATH
  CI_APPLICATION_REPOSITORY: $CI_REGISTRY_IMAGE

build_image:
  stage: build
  services:
    - docker:19.03.13-dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest -t $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
  tags:
    - ec2
    - shell
    - remote


scan-job:
  rules:
    - if: '$SKIP_SECURITY_JOBS != "true"'
  image:
    name: registry.aquasec.com/scanner:2022.4
    entrypoint: [""]
  stage: security_scan
  variables:
    IMAGE_TAG: $CI_PROJECT_PATH:$CI_COMMIT_SHORT_SHA
  script:
    - /opt/aquasec/scannercli scan -H $AQUA_SERVER --token $AQUA_TOKEN --registry "glab" $IMAGE_TAG --show-negligible --register-compliant --htmlfile $CI_PROJECT_DIR/aqua-scan.html >/dev/null
  artifacts:
    paths:
      - aqua-scan.html
  tags:
    - docker
    - ec2
    - remote

generate_sbom:
  rules:
    - if: '$SKIP_SECURITY_JOBS != "true"'
  stage: generate_sbom
  needs: ["scan-job"]
  image: aquasec/aqua-scanner
  script:
    - export BILLY_SERVER=https://billy.dev-aqua.codesec.aquasec.com
    - curl -sLo install.sh download.codesec.aquasec.com/billy/install.sh
    - curl -sLo install.sh.checksum https://github.com/argonsecurity/releases/releases/latest/download/install.sh.checksum
    - |
     if ! cat install.sh.checksum | sha256sum ; then
      echo "install.sh checksum failed"
      exit 1
     fi
     BINDIR="." sh install.sh
     rm install.sh install.sh.checksum
    - ./billy generate /
     --access-token $GITLAB_TOKEN /
     --aqua-key $AQUA_KEY /
     --aqua-secret $AQUA_SECRET /
     --cspm-url https://stage.api.cloudsploit.com /
     --artifact-path "$CI_PROJECT_DIR"
     --package-json
     --sast
     --reachability
    - export AQUA_KEY=$AQUA_KEY
    - export AQUA_SECRET=$AQUA_SECRET
    - export GITLAB_TOKEN=$GITLAB_TOKEN
    - export AQUA_URL=https://api.dev.supply-chain.cloud.aquasec.com
    - export CSPM_URL=https://stage.api.cloudsploit.com
    - export TRIVY_RUN_AS_PLUGIN=aqua
    - trivy fs --scanners config,vuln,secret .

  tags:
    - docker
    - ec2
    - remote


mark_as_immutable:
  stage: mark_as_immutable
  image: docker:19.03.12
  services:
    - name: docker:19.03.13-dind
      alias: docker
  script:
    - echo "Checking Docker version..."
    - docker --version
    - echo "Marking the image as immutable..."
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA-immutable
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA-immutable
    - echo "This image has been validated by Aqua Security and is free from known vulnerabilities."
  tags:
    - docker
    - ec2
    - remote
    
sign_image:
  stage: sign_image
  image: docker:latest
  services:
    - docker:dind
  variables:
    COSIGN_YES: "true"
  id_tokens:
    SIGSTORE_ID_TOKEN:
      aud: sigstore
  before_script:
    - apk add --update cosign
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - docker pull "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
    - IMAGE_DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA)
    - cosign sign $IMAGE_DIGEST

verify_image_signature:
  image: docker:latest  
  stage: verify
  services:
    - docker:dind
  variables:
    COSIGN_YES: "true"
  id_tokens:
    SIGSTORE_ID_TOKEN:
      aud: sigstore
  before_script:
    - apk add --update cosign  
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    - IMAGE_DIGEST=$(docker inspect --format='{{index .RepoDigests 0}}' $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA)
    - cosign verify "$CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA" --certificate-identity "$CI_PROJECT_URL//.gitlab-ci.yml@refs/heads/$CI_COMMIT_BRANCH" --certificate-oidc-issuer "$CI_SERVER_URL"


promote_to_immutable_repo:
  stage: promote_to_immutable_repo
  image: docker:19.03.12
  services:
    - docker:dind
  before_script:
    - echo "$CI_REGISTRY_PASSWORD" | docker login -u "$CI_REGISTRY_USER" --password-stdin $CI_REGISTRY
  script:
    - "docker pull $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA"
    - "docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA-immutable"
    - "docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA-immutable"
    - 'echo "-------------------------------------------------"'
    - 'echo "IMAGE PROMOTION SUCCESSFUL: The image has been promoted to the immutable repository."'
    - 'echo "-------------------------------------------------"'
  tags:
    - docker
    - ec2
    - remote