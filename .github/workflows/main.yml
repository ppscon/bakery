name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to GitHub Container Registry
        run: echo "${{ secrets.CI_TOKEN }}" | docker login ghcr.io -u "${{ github.actor }}" --password-stdin

      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME="bakery-app"
          docker build -t ghcr.io/${{ github.repository }}/$IMAGE_NAME:${{ github.sha }} .
          docker push ghcr.io/${{ github.repository }}/$IMAGE_NAME:${{ github.sha }}

  scan_job:
    runs-on: ubuntu-latest
    needs: build_image
    env:
      IMAGE_NAME: "bakery-app"
    steps:
      - name: Debug - Print environment variables
        run: echo "AQUA_SERVER = ${{ secrets.AQUA_SERVER }}"

      - name: Setup Docker Authentication
        run: echo "${{ secrets.DOCKER_AUTH_CONFIG }}" > $HOME/.docker/config.json

      - name: Debug - Print Docker config file
        run: cat $HOME/.docker/config.json

      - name: Pull Aqua Security Scanner Image
        run: docker pull registry.aquasec.com/scanner:2022.4

      - name: Run Aqua Security Scan
        run: |
          IMAGE_TAG=ghcr.io/${{ github.repository }}/$IMAGE_NAME:${{ github.sha }}
          docker run --rm registry.aquasec.com/scanner:2022.4 scannercli scan -H "${{ secrets.AQUA_SERVER }}" --token "${{ secrets.AQUA_TOKEN }}" --registry "Github" $IMAGE_TAG --show-negligible --register-compliant --htmlfile aqua-scan.html >/dev/null

      - name: Upload Aqua Scan Results
        uses: actions/upload-artifact@v2
        with:
          name: aqua-scan-results
          path: aqua-scan.html
