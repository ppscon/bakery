name: CI/CD Pipeline with Aqua Security Scan and SBOM

on:
  push:
    branches:
      - main

jobs:
  run_unit_tests:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '16'
    - run: npm install
      working-directory: ./app
    - run: npm test
      working-directory: ./app

  build_image:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - id: docker-login
      run: echo "${{ secrets.CI_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Build and Push Docker Image
      run: |
        IMAGE_NAME="bakery-app"
        docker build -t ghcr.io/${{ github.repository }}/$IMAGE_NAME:${{ github.sha }} .
        docker push ghcr.io/${{ github.repository }}/$IMAGE_NAME:${{ github.sha }}

  aqua_scan:
    runs-on: ubuntu-latest
    needs: build_image
    env:
      DOCKER_AUTH_CONFIG: ${{ secrets.DOCKER_AUTH_CONFIG }}
      IMAGE_NAME: "bakery-app"
    steps:
    - uses: actions/checkout@v2
    - run: echo $DOCKER_AUTH_CONFIG > /home/runner/.docker/config.json
    - id: docker-pull-scanner
      run: docker pull registry.aquasec.com/scanner:2022.4
    - name: Run Aqua Security Scan
      run: |
        IMAGE_TAG=ghcr.io/${{ github.repository }}/$IMAGE_NAME:${{ github.sha }}
        docker run --rm -v $(pwd)/artifacts:/artifacts --entrypoint="" registry.aquasec.com/scanner:2022.4 /opt/aquasec/scannercli scan -H ${{ secrets.AQUA_SERVER }} --token ${{ secrets.AQUA_TOKEN }} --registry "Github" $IMAGE_TAG --show-negligible --register-compliant --htmlfile /artifacts/aqua-scan.html >/dev/null

  aqua_sbom:
    runs-on: ubuntu-latest
    needs: [aqua_scan]
    container:
      image: aquasec/aqua-scanner:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Generate SBOM using Aqua
        run: |
          export BILLY_SERVER=https://billy.dev-aqua.codesec.aquasec.com
          curl -sLo install.sh download.codesec.aquasec.com/billy/install.sh
          curl -sLo install.sh.checksum https://github.com/argonsecurity/releases/releases/latest/download/install.sh.checksum
          if ! cat install.sh.checksum | sha256sum ; then
            echo "install.sh checksum failed"
            exit 1
          fi
          BINDIR="." sh install.sh
          rm install.sh install.sh.checksum
          ./billy generate / \
            --access-token ${{ secrets.GITHUB_TOKEN }} \
            --aqua-key ${{ secrets.AQUA_KEY }} \
            --aqua-secret ${{ secrets.AQUA_SECRET }} \
            --cspm-url https://stage.api.cloudsploit.com \
            --artifact-path "$GITHUB_WORKSPACE" \
            --package-json \
            --sast \
            --reachability
          export AQUA_KEY=${{ secrets.AQUA_KEY }}
          export AQUA_SECRET=${{ secrets.AQUA_SECRET }}
          export AQUA_URL=https://api.dev.supply-chain.cloud.aquasec.com
          export CSPM_URL=https://stage.api.cloudsploit.com
          export TRIVY_RUN_AS_PLUGIN=aqua
          trivy fs --scanners config,vuln,secret .
