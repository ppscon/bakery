name: CI/CD Pipeline with Aqua Security Scan

on:
  push:
    branches:
      - main

jobs:
  run_unit_tests:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'
    - name: Install dependencies
      run: npm install
      working-directory: ./app
    - name: Run tests
      run: npm test
      working-directory: ./app


  build_image:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Login to GitHub Container Registry
      run: echo "${{ secrets.CI_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
    - name: Build and Push Docker Image
      run: |
        IMAGE_NAME="bakery-app"
        docker build -t ghcr.io/${{ github.repository }}/$IMAGE_NAME:${{ github.sha }} .
        docker push ghcr.io/${{ github.repository }}/$IMAGE_NAME:${{ github.sha }}

  aqua_scan:
    runs-on: ubuntu-latest
    needs: build_image
    env:
      DOCKER_AUTH_CONFIG: ${{ secrets.DOCKER_AUTH_CONFIG }}
      IMAGE_NAME: "bakery-app"
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Docker Login to Aqua Registry
      run: echo $DOCKER_AUTH_CONFIG > /home/runner/.docker/config.json
    - name: Pull Aqua Scanner
      run: docker pull registry.aquasec.com/scanner:2022.4
    - name: Run Aqua Security Scan
      run: |
        IMAGE_TAG=ghcr.io/${{ github.repository }}/$IMAGE_NAME:${{ github.sha }}
        docker run --rm -v $(pwd)/artifacts:/artifacts --entrypoint="" registry.aquasec.com/scanner:2022.4 /opt/aquasec/scannercli scan -H ${{ secrets.AQUA_SERVER }} --token ${{ secrets.AQUA_TOKEN }} --registry "Github" $IMAGE_TAG --show-negligible --register-compliant --htmlfile /artifacts/aqua-scan.html >/dev/null

    aqua_sbom:
        runs-on: ubuntu-latest
        needs: build_image
        steps:
          - name: Checkout code
            uses: actions/checkout@v2
          - name: Run Aqua SBOM and Code Scan (Trivy)
            uses: docker://aquasec/aqua-scanner
            with:
              args: trivy fs --scanners config,vuln,secret .
            env:
              AQUA_KEY: ${{ secrets.AQUA_KEY }}
              AQUA_SECRET: ${{ secrets.AQUA_SECRET }}
              GITHUB_TOKEN: ${{ github.token }}
              AQUA_URL: https://api.dev.supply-chain.cloud.aquasec.com
              CSPM_URL: https://stage.api.cloudsploit.com
              TRIVY_RUN_AS_PLUGIN: 'aqua'